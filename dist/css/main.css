:root {
  --color-white: #fff;
  --color-black: #000;
  --color-text-primary:   #E9E9E9;
  --color-text-secondary: #000;
  --color-text-tertiary: #28211D;
  --color-link: #fff;
  --color-link-visited: #CC9268;
  --color-link-hover: #68C3CC;
  --color-bg-primary: #443C38;
  --color-bg-secondary: #28211D;
  --color-bg-tertiary: #7B442C;
}

:root {
  --fz-normal: 1.125rem;
  --fz-link:1.5rem;
  --fz-h1: 7rem;
  --fz-h1-media:5.5rem;
  --fz-h2: 2.25rem;
  --fz-h3: 2.25rem;
  --fz-h4: 2rem;
  --ff-normal: 'Puritan', sans-serif;
  --ff-title-primary: 'Do Hyeon', sans-serif;
  --fw-regular: 400;
  --fw-bold: 700;
}

:root {
  --max-width: 1200px;
  --min-width:375px;
  --padding-thin: 10px;
  --padding-small: 20px;
  --padding-medium: 30px;
  --padding-big: 40px;
  --padding-large: 50px;
  --padding-huge: 150px;
  --margin-thin: 10px;
  --margin-small: 20px;
  --margin-medium: 30px;
  --margin-big: 40px;
  --margin-large: 50px;
  --margin-huge: 100px;
}

/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

*, *:before, *:after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
}

body {
  font-family: var(--ff-normal);
  font-size: var(--fz-normal);
  color: var(--color-text-primary);
  background: var(--color-bg-primary);
}

h1, h2, h3, h4 {
  font-family: var(--ff-title-primary);
  line-height: var(--lh-thin);
  font-weight: var(--fw-bold);
}

h1 {
  margin: 0;
  font-size: var(--fz-h1);
  text-transform: uppercase;
}

h2 {
  font-size: var(--fz-h2);
  text-transform: uppercase;
  background: var(--color-bg-secondary);
  padding: var(--padding-large);
  margin: var(--margin-small) 0;
}

h3 {
  font-size: var(--fz-h3);
}

h4 {
  font-size: var(--fz-h4);
}

img {
  width: 100%;
}

a {
  font-family: var(--ff-title-primary);
  font-size: var(--fz-link);
  -webkit-transition: color 500ms ease-out;
  transition: color 500ms ease-out;
}

a:link {
  color: var(--color-link);
  text-decoration: none;
}

a:visited {
  color: var(--color-link-visited);
}

a:hover {
  color: var(--color-link-hover);
  text-decoration: underline;
}

.flecheMonte {
  cursor: pointer;
  color: var(--color-link);
  -webkit-transition: color 500ms ease-out;
  transition: color 500ms ease-out;
}

.flecheMonte:hover {
  color: var(--color-link-hover);
}

.wrapper {
  max-width: var(--max-width);
  min-width: var(--min-width);
  margin: 0 auto;
}

.grid-wrapper {
  display: grid;
  grid-template-columns: auto minmax(var(--min-width), var(--max-width)) auto;
  grid-column-gap: 30px;
}

.grid-center {
  grid-column: 2/3;
}

.navDesktop {
  width: 100%;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 999;
  background: var(--color-bg-secondary);
}

.navDesktop .wrapper {
  padding: var(--padding-small);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.navDesktop img {
  width: 60%;
}

.navDesktop .texteNav {
  padding: 0;
  list-style-type: none;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.navDesktop .texteNav li {
  margin-left: var(--margin-small);
}

.navMobile {
  position: relative;
  display: none;
}

.navMobile .texteNav {
  background: var(--color-bg-secondary);
  margin: 0;
  padding: var(--padding-thin);
  list-style-type: none;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  position: relative;
  z-index: 2;
}

.navMobile.open .mobile-modal {
  -webkit-transform: translateY(0);
          transform: translateY(0);
}

.mobile-modal {
  position: absolute;
  top: 100%;
  left: 0;
  width: 100%;
  -webkit-transform: translateY(-100%);
          transform: translateY(-100%);
  -webkit-transition: 0.3s -webkit-transform ease-out;
  transition: 0.3s -webkit-transform ease-out;
  transition: 0.3s transform ease-out;
  transition: 0.3s transform ease-out, 0.3s -webkit-transform ease-out;
  z-index: 1;
}

.mobile-modal .texteNav li {
  width: 24%;
}

@media screen and (max-width: 768px) {
  .navDesktop {
    display: none;
  }
  .navMobile {
    display: block;
  }
}

@media screen and (max-width: 576px) {
  .navMobile .texteNav .logo {
    width: 50%;
    padding-left: var(--padding-small);
  }
  .mobile-modal .texteNav {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    text-align: center;
  }
  .mobile-modal .texteNav a {
    font-size: var(--fz-normal);
  }
}

.hero {
  background-image: url("../images/hero.jpg");
  background-position: center;
  margin-top: var(--margin-huge);
  padding: var(--padding-huge) 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  text-align: center;
}

.hero .slogan {
  font-size: var(--fz-link);
}

@media screen and (max-width: 768px) {
  .hero {
    margin: 0;
  }
}

@media screen and (max-width: 576px) {
  .hero h1 {
    font-size: var(--fz-h1-media);
  }
  .hero .slogan {
    font-size: var(--fz-normal);
  }
}

.filmsPopulaires .wrapper {
  padding: 0 var(--padding-small);
}

.filmsPopulaires .filmPopulaire img {
  height: 570px;
  -o-object-fit: cover;
     object-fit: cover;
  position: relative;
}

.filmsPopulaires .filmPopulaire .textFilm {
  position: absolute;
  bottom: 0;
  background: var(--color-bg-secondary);
  width: 100%;
  margin-top: auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  text-align: center;
  opacity: 0;
  -webkit-transition: opacity 300ms ease-out;
  transition: opacity 300ms ease-out;
}

.filmsPopulaires .filmPopulaire .textFilm .noteFilm {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.filmsPopulaires .filmPopulaire:hover .textFilm {
  opacity: 1;
}

.filmsPopulaires .filmPopulaire:nth-child(1) {
  display: none;
}

.filmsNoter .wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  padding: 0 var(--padding-small);
}

.filmsNoter .wrapper .filmNoter {
  width: 32%;
  position: relative;
}

.filmsNoter .wrapper .filmNoter:hover .textFilm {
  opacity: 1;
}

.filmsNoter .wrapper .filmNoter:nth-child(1) {
  display: none;
}

.filmsNoter .wrapper .filmNoter img {
  height: 570px;
  -o-object-fit: cover;
     object-fit: cover;
}

.filmsNoter .wrapper .filmNoter .textFilm {
  position: absolute;
  bottom: 0;
  background: var(--color-bg-secondary);
  width: 100%;
  margin-top: auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  text-align: center;
  opacity: 0;
  -webkit-transition: opacity 300ms ease-out;
  transition: opacity 300ms ease-out;
}

.filmsNoter .wrapper .filmNoter .textFilm .noteFilm {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

@media screen and (max-width: 1000px) {
  .filmsNoter .wrapper .filmNoter img {
    height: 450px;
  }
}

@media screen and (max-width: 768px) {
  .filmsNoter .wrapper .filmNoter {
    width: 48%;
  }
  .filmsNoter .wrapper .filmNoter img {
    height: 450px;
  }
}

@media screen and (max-width: 576px) {
  .filmsNoter .wrapper .filmNoter img {
    height: 350px;
  }
}

@media screen and (max-width: 375px) {
  .filmsNoter .wrapper .filmNoter {
    width: 90%;
  }
  .filmsNoter .wrapper .filmNoter img {
    height: 350px;
  }
}

button {
  background: var(--color-bg-tertiary);
  border-color: var(--color-bg-primary);
  border-radius: 10px;
  padding: var(--padding-thin) var(--padding-small);
  margin-top: auto;
  margin-bottom: var(--padding-small);
}

.swiper .swiper-slide {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

footer {
  background: var(--color-bg-secondary);
}

footer .wrapper {
  margin-top: var(--margin-thin);
  padding: var(--padding-small) 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

footer .wrapper .infoFooter {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  padding-left: var(--padding-small);
}

footer .wrapper .copyright {
  margin-right: var(--margin-small);
}

footer .wrapper .logoMovieDb {
  width: 30%;
}

footer .wrapper .groupeLogoMedias {
  margin-right: var(--margin-large);
}

footer .wrapper .groupeLogoMedias svg {
  fill: var(--color-link);
  margin-right: var(--margin-thin);
}

footer .wrapper .groupeLogoMedias svg :hover {
  fill: var(--color-link-hover);
}

@media screen and (max-width: 768px) {
  footer .wrapper .infoFooter {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    -webkit-box-align: start;
        -ms-flex-align: start;
            align-items: flex-start;
  }
  footer .wrapper .copyright {
    margin-bottom: var(--margin-small);
  }
  footer .wrapper .logoMovieDb {
    width: 30%;
  }
  footer .wrapper .groupeLogoMedias {
    margin-bottom: var(--margin-small);
  }
}

.infoPrincipalFilm img {
  margin-top: var(--margin-huge);
}

.infoPrincipalFilm .sectionInfo {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  font-weight: 600;
}

.infoPrincipalFilm hr {
  margin: 0;
}

.infoPrincipalFilm .info {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.infoPrincipalFilm .info p {
  margin-right: var(--margin-thin);
}

.infoPrincipalFilm .description {
  padding-top: var(--padding-small);
}

.swiperActeurs .acteur:nth-child(1) {
  display: none;
}

.swiperActeurs .acteur .nom {
  text-align: center;
}

.navMobile {
  display: none;
}

.navMobile .hamburgerAnim {
  position: relative;
  background: none;
  border: none;
}

.navMobile .hamburgerAnim .material-icons {
  font-size: var(--fz-h1-media);
  color: var(--color-text-primary);
}

.navMobile .hamburgerAnim .icon-open, .navMobile .hamburgerAnim .icon-close {
  -webkit-transition: .3s transform ease-out;
  transition: .3s transform ease-out;
}

.navMobile .hamburgerAnim .icon-close {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%) scale(0);
          transform: translate(-50%, -50%) scale(0);
}

.navMobile .hamburgerAnim.open .icon-open, .navMobile .hamburgerAnim.open .icon-close {
  -webkit-transition: .3s transform ease-out;
  transition: .3s transform ease-out;
}

.navMobile .hamburgerAnim.open .icon-close {
  -webkit-transform: translate(-50%, -50%) scale(1);
          transform: translate(-50%, -50%) scale(1);
}

.navMobile .hamburgerAnim.open .icon-open {
  -webkit-transform: scale(0);
          transform: scale(0);
}

@media screen and (max-width: 768px) {
  .navMobile {
    display: block;
  }
}

@media screen and (max-width: 576px) {
  .navMobile .hamburgerAnim .material-icons {
    font-size: var(--fz-h2);
    color: var(--color-text-primary);
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
